version: '3.8'

services:
  frontend:
    build: frontend
    ports:
      - '3000:3000'
    networks:
      - network
    depends_on:
      backend:
        condition: service_healthy
      keycloak:
        condition: service_started

  backend:
    build: backend
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - '8080:8080'
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    healthcheck:
      test: wget -qO- http://localhost:8080/actuator/health | grep '"status":"UP"' || exit 1
      interval: 2s
      timeout: 2s
      retries: 20

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_DB=backend
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - network
    healthcheck:
      test: pg_isready -U postgres -d backend
      interval: 2s
      timeout: 2s
      retries: 20

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_DB_URL_PORT=5433
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - '8443:8443'
    networks:
      - network
    command:
      - "start-dev"
      - "--http-port=8443"
      - "--import-realm"
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      PGPORT: 5433
    volumes:
      - keycloak-db:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    networks:
      - network
    healthcheck:
      test: pg_isready -U keycloak -d keycloak
      interval: 2s
      timeout: 2s
      retries: 20

networks:
  network:
    driver: bridge

volumes:
  db:
    driver: local
  keycloak-db:
    driver: local